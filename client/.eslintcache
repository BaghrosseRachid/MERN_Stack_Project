[{"C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\index.js":"1","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\App.js":"2","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\layout\\Landing.js":"3","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\layout\\Navbar.js":"4","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\auth\\Register.js":"5","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\auth\\Login.js":"6","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\store.js":"7","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\reducers\\index.js":"8","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\reducers\\alert.js":"9","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\actions\\types.js":"10","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\actions\\alert.js":"11","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\layout\\Alert.js":"12","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\actions\\auth.js":"13","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\reducers\\auth.js":"14","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\utils\\setAuthToken.js":"15","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\dashboard\\Dashboard.js":"16","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\routing\\PrivateRoute.js":"17","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\actions\\profile.js":"18","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\reducers\\profile.js":"19","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\layout\\Spinner.js":"20","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\profile-forms\\CreateProfile.js":"21","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\dashboard\\DashbordAction.js":"22","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\profile-forms\\EditProfile.js":"23","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\profile-forms\\AddExperience.js":"24","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\profile-forms\\AddEducation.js":"25","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\dashboard\\Education.js":"26","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\dashboard\\Experience.js":"27","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\profiles\\Profiles.js":"28","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\profiles\\ProfileItem.js":"29","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\profile\\Profile.js":"30","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\profile\\ProfileAbout.js":"31","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\profile\\ProfileTop.js":"32","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\profile\\ProfileExperiences.js":"33","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\profile\\ProfileEducation.js":"34","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\profile\\ProfileGithub.js":"35","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\reducers\\post.js":"36","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\posts\\posts.js":"37","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\actions\\post.js":"38","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\posts\\Posts.js":"39","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\posts\\PostItem.js":"40","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\posts\\PostForm.js":"41","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\post\\Post.js":"42","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\post\\CommentForm.js":"43","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\post\\CommentItem.js":"44"},{"size":198,"mtime":1611600555198,"results":"45","hashOfConfig":"46"},{"size":2356,"mtime":1617364262179,"results":"47","hashOfConfig":"46"},{"size":1186,"mtime":1613728371716,"results":"48","hashOfConfig":"46"},{"size":2667,"mtime":1616678868325,"results":"49","hashOfConfig":"46"},{"size":3034,"mtime":1615809851175,"results":"50","hashOfConfig":"46"},{"size":2255,"mtime":1615806023730,"results":"51","hashOfConfig":"46"},{"size":516,"mtime":1612000526779,"results":"52","hashOfConfig":"46"},{"size":287,"mtime":1616676873772,"results":"53","hashOfConfig":"46"},{"size":470,"mtime":1612001161188,"results":"54","hashOfConfig":"46"},{"size":1021,"mtime":1617391809063,"results":"55","hashOfConfig":"46"},{"size":368,"mtime":1612019339934,"results":"56","hashOfConfig":"46"},{"size":471,"mtime":1612781045748,"results":"57","hashOfConfig":"46"},{"size":2048,"mtime":1615812048010,"results":"58","hashOfConfig":"46"},{"size":1649,"mtime":1615814286913,"results":"59","hashOfConfig":"46"},{"size":618,"mtime":1612549310949,"results":"60","hashOfConfig":"46"},{"size":1939,"mtime":1615317506455,"results":"61","hashOfConfig":"46"},{"size":642,"mtime":1613383866873,"results":"62","hashOfConfig":"46"},{"size":6823,"mtime":1615808664323,"results":"63","hashOfConfig":"46"},{"size":1306,"mtime":1615114704339,"results":"64","hashOfConfig":"46"},{"size":248,"mtime":1613729341269,"results":"65","hashOfConfig":"46"},{"size":6088,"mtime":1614206304634,"results":"66","hashOfConfig":"46"},{"size":655,"mtime":1614724190522,"results":"67","hashOfConfig":"46"},{"size":7615,"mtime":1614725290886,"results":"68","hashOfConfig":"46"},{"size":3112,"mtime":1614932509495,"results":"69","hashOfConfig":"46"},{"size":3142,"mtime":1614934650742,"results":"70","hashOfConfig":"46"},{"size":1553,"mtime":1614946513454,"results":"71","hashOfConfig":"46"},{"size":1570,"mtime":1614946503632,"results":"72","hashOfConfig":"46"},{"size":1335,"mtime":1615147513986,"results":"73","hashOfConfig":"46"},{"size":1027,"mtime":1615817199723,"results":"74","hashOfConfig":"46"},{"size":3042,"mtime":1615812522740,"results":"75","hashOfConfig":"46"},{"size":872,"mtime":1615804420940,"results":"76","hashOfConfig":"46"},{"size":2084,"mtime":1615800448841,"results":"77","hashOfConfig":"46"},{"size":857,"mtime":1615755578273,"results":"78","hashOfConfig":"46"},{"size":976,"mtime":1615756378761,"results":"79","hashOfConfig":"46"},{"size":2184,"mtime":1615803790664,"results":"80","hashOfConfig":"46"},{"size":1711,"mtime":1617483814662,"results":"81","hashOfConfig":"46"},{"size":571,"mtime":1616678455350,"results":"82","hashOfConfig":"46"},{"size":4720,"mtime":1617483473562,"results":"83","hashOfConfig":"46"},{"size":1099,"mtime":1617394418065,"results":"84","hashOfConfig":"46"},{"size":2402,"mtime":1617391437591,"results":"85","hashOfConfig":"46"},{"size":1032,"mtime":1617358672279,"results":"86","hashOfConfig":"46"},{"size":1196,"mtime":1617453288898,"results":"87","hashOfConfig":"46"},{"size":1079,"mtime":1617482145872,"results":"88","hashOfConfig":"46"},{"size":1417,"mtime":1617398897545,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"oolej3",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"92"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"92"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"92"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"92"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"92"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"92"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"92"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"92"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"92"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"92"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"92"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"92"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"92"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"92"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"92"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":1,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"92"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"92"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\index.js",[],["196","197"],"C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\App.js",[],"C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\layout\\Landing.js",["198"],"import React from 'react'\r\nimport {Link,Redirect} from 'react-router-dom';\r\nimport {Fragment} from 'react';\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst Landing = ({isAuthenticated}) => {\r\n   \r\n  if(isAuthenticated){\r\n      return <Redirect to= \"/dashboard\"></Redirect>\r\n  }\r\n\r\n    return (\r\n        <section class=\"landing\">\r\n        <div className=\"dark-overlay\">\r\n          <div className=\"landing-inner\">\r\n            <h1 className=\"x-large\">Espace de Developpeurs</h1>\r\n            <p className=\"lead\">\r\n             \r\nCréez un profil de développeur, partagez des publications et obtenez de l'aide\r\n              autres développeurs\r\n            </p>\r\n            <div className=\"buttons\">\r\n              <Link to=\"register\" className=\"btn btn-primary\">S'enregistrer</Link>\r\n              <Link to=\"login\" className=\"btn btn-light\">Se Connecter</Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    )\r\n}\r\nLanding.prototypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n}\r\n\r\nconst mapStateToProps = state=> ({\r\n  isAuthenticated :state.auth.isAuthenticated\r\n});\r\nexport default connect(mapStateToProps)( Landing)\r\n","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\layout\\Navbar.js",[],"C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\auth\\Register.js",["199","200"],"import  { Fragment, useState } from 'react'\r\nimport {fragment} from 'react'\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {setAlert} from '../../actions/alert';\r\nimport {register} from '../../actions/auth';\r\nimport PropTypes from 'prop-types';\r\nimport validator from 'validator'\r\n\r\nconst Register = ({setAlert,register,isAuthenticated}) => {\r\n    const [formData,setFormData]= useState({\r\n        name: '',\r\n        email:'',\r\n        password:'',\r\n        password2: ''\r\n    });\r\n    const {name,email,password,password2} = formData;\r\n\r\n    const onChange= e => setFormData({...formData,[e.target.name]:e.target.value});\r\n    const onSubmit=  e=> {\r\n        e.preventDefault();//empêcher l'actualisation de la page aprés submit\r\n     \r\n        if(password!==password2){\r\n            \r\n          setAlert('mot de passe incorrect','danger');\r\n      }\r\n        else {\r\n             register({name,email,password});\r\n        }\r\n    }\r\n      if (isAuthenticated) {\r\n        return <Redirect to='/dashboard'></Redirect>\r\n        \r\n      }\r\n\r\n    return (\r\n\r\n       <Fragment>\r\n           <h1 className=\"large text-primary\">S'enregistrer</h1>\r\n      <p className=\"lead\"><i className=\"fas fa-user\"></i> Créer Votre Compte</p>\r\n      <form className=\"form\" onSubmit={e=>onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Nom\" name=\"name\" \r\n          value={name}\r\n          onChange={e=> onChange(e)} \r\n           />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Address Email\" name=\"email\" \r\n           value={email}\r\n           onChange={e=> onChange(e)} \r\n           \r\n          />\r\n          <small className=\"form-text\"\r\n            >\r\n            Ce site utilise Gravatar donc si vous voulez une image de profil, utilisez un\r\n                        Email Gravatar</small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Mot de passe\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={e=> onChange(e)} \r\n           \r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Confirmez le mot de passe\"\r\n            name=\"password2\"\r\n            value={password2}\r\n            onChange={e=> onChange(e)} \r\n           \r\n          />\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Enregistrer\" />\r\n      </form>\r\n      <p className=\"my-1\">\r\n        \r\nVous avez déjà un compte? <Link to=\"/login\">Se Connecter</Link>\r\n   </p>\r\n       </Fragment>\r\n    )\r\n}\r\nRegister.propTypes={\r\n  setAlert : PropTypes.func.isRequired,\r\n  register: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool,\r\n}\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated : state.auth.isAuthenticated,\r\n\r\n});\r\nexport default connect(mapStateToProps,{setAlert,register})(Register);\r\n","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\auth\\Login.js",["201","202","203","204"],"import  { Fragment, useState } from 'react'\r\nimport {fragment} from 'react'\r\nimport axios from 'axios';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport {login} from '../../actions/auth';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {setAlert} from '../../actions/alert';\r\nimport auth from '../../reducers/auth';\r\n\r\n\r\nconst Login = ({login,isAuthenticated}) => {\r\n    const [formData,setFormData]= useState({\r\n        \r\n        email:'',\r\n        password:'',\r\n        \r\n    });\r\n    const {email,password} = formData;\r\n\r\n    const onChange= e => setFormData({...formData,[e.target.name]:e.target.value});\r\n    const onSubmit=  e=>{\r\n        e.preventDefault();//empêcher l'actualisation de la page aprés submit\r\n          login(email,password);\r\n        }\r\n        //redirect if login\r\n        if (isAuthenticated) {\r\n          return <Redirect to= \"/dashboard\"></Redirect>\r\n        }\r\n    \r\n    return (\r\n\r\n       <Fragment>\r\n           <h1 className=\"large text-primary\">Se Connecter</h1>\r\n      <p className=\"lead\"><i className=\"fas fa-user\"></i> Connectez à Votre Compte</p>\r\n      <form className=\"form\" onSubmit={e=>onSubmit(e)}>\r\n       \r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Address Email\" name=\"email\" \r\n           value={email}\r\n           onChange={e=> onChange(e)} \r\n           \r\n          />\r\n          \r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Mot de passe\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={e=> onChange(e)} \r\n          />\r\n        </div>\r\n      \r\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Connecter\" />\r\n      </form>\r\n      <p className=\"my-1\">\r\n        \r\nVous n'avez pas  un compte? <Link to=\"/register\">S'enregistrer</Link>\r\n   </p>\r\n\r\n\r\n       </Fragment>\r\n    )\r\n}\r\nLogin.prototype = {\r\n  login : PropTypes.func.isRequired,\r\n  isAuthenticated : PropTypes.bool,\r\n}\r\n// create mapstatetoprops to access to the state of auth reducer\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated : state.auth.isAuthenticated,\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps,{login})(Login)\r\n\r\n","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\store.js",[],"C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\reducers\\index.js",[],"C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\reducers\\alert.js",["205"],"//it is our reducer when we will define our switch\r\nimport {SET_ALERT,REMOVE_ALERT} from '../actions/types'; \r\nconst initialState = [];\r\nexport default function (state = initialState, action){\r\n    const { type , payload } = action;\r\nswitch (type) {\r\n    case SET_ALERT:\r\n        return [...state,payload];\r\n        \r\n    case REMOVE_ALERT:\r\n        return state.filter(alert => alert.id !== payload);\r\n        \r\n\r\n    default:\r\n        return state;\r\n        \r\n}\r\n\r\n}\r\n","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\actions\\types.js",[],"C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\actions\\alert.js",[],"C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\layout\\Alert.js",[],"C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\actions\\auth.js",[],"C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\reducers\\auth.js",["206"],"import {\r\n    \r\n    REGISTER_SUCCESS,REGISTER_FAIL,USER_LOADED,AUTH_ERROR,\r\n     LOGIN_SUCCESS,LOGIN_FAIL,LOGOUT, DELETE_ACOUNT\r\n    \r\n    } from '../actions/types';\r\n\r\nconst initialState={\r\n    // storage the token that we get back\r\ntoken : localStorage.getItem('token'),\r\n//auth success=> true else false\r\nisAuthenticated :null,\r\n// make sure that the loading is done  false=> means that the data has been loaded\r\nloading: true,\r\n// user object where we will store the user informations\r\nuser : null\r\n}\r\nexport default function(state=initialState,action){\r\n    const {type,payload}=action;\r\n\r\n    switch (type) {\r\n        case REGISTER_SUCCESS:\r\n        case LOGIN_SUCCESS :\r\n            //put the token in the locale storage\r\n            localStorage.setItem('token',payload.token);\r\n            return {\r\n                ...state,\r\n                ...payload,\r\n                isAuthenticated: true,\r\n                loading : false\r\n            }\r\n        case USER_LOADED:\r\n     \r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                loading : false,\r\n                user:payload\r\n            }\r\n           \r\n            case REGISTER_FAIL:\r\n            case AUTH_ERROR: \r\n            case LOGIN_FAIL:\r\n            case LOGOUT :\r\n            case DELETE_ACOUNT :\r\n                localStorage.removeItem('token');\r\n                return {\r\n                    ...state,\r\n                    token:null,\r\n                    isAuthenticated:false,\r\n                    user:null,\r\n                    loading : false\r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\dashboard\\Dashboard.js",["207","208"],"import React,{Fragment, useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport { deleteAcount, getCurrentProfile } from '../../actions/profile'\r\nimport Education from './Education'\r\nimport Experience from './Experience'\r\nimport Spinner from '../layout/Spinner';\r\nimport DashboardAction from './DashbordAction'\r\nconst Dashboard = ({getCurrentProfile,deleteAcount,auth:{user},profile : {profile,loading}}) => {\r\n    //use effect hook\r\n    React.useEffect(() => {\r\n         getCurrentProfile() ;\r\n    }, []);\r\n\r\n    return loading && profile === null ?( <Spinner/> ):( <Fragment>\r\n      <h1 className=\"large text-primary\">Tableau de board</h1>\r\n      <p className=\"lead\">\r\n          <i className=\"fas fa-user\"></i> Bienvenue {user && user.name}\r\n      </p>\r\n      {profile!==null ? (<Fragment>\r\n\r\n      <DashboardAction/>\r\n     <Experience experience = {profile.experience}/>\r\n     <Education education = {profile.education}/>\r\n\r\n     <div className=\"my-2\">\r\n      <button className=\"btn btn-danger\" onClick={()=>deleteAcount()}>\r\n        <i className=\"fas fa-user-minus\"></i> Supprimer mon compte\r\n      </button>\r\n\r\n     </div>\r\n     \r\n      </Fragment>):\r\n      ( <Fragment><p> Vous n’avez pas encore créer un profil, s’il vous plaît ajouter quelques infos</p>\r\n                   <Link to= \"create-profile\" className=\"btn btn-primary my-1\">\r\n                       Créer Profile\r\n                   </Link>\r\n      </Fragment>) }\r\n\r\n    </Fragment>\r\n    );\r\n}\r\n\r\nDashboard.propTypes = {\r\n  auth:PropTypes.object.isRequired,\r\n  getCurrentProfile:PropTypes.func.isRequired,\r\n  profile : PropTypes.object.isRequired,\r\n  deleteAcount:PropTypes.func.isRequired,\r\n}\r\nconst mapStateToProps = state =>({\r\n    auth : state.auth,\r\n    profile : state.profile,\r\n})\r\n\r\nexport default connect(mapStateToProps,{getCurrentProfile,deleteAcount}) (Dashboard)\r\n","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\actions\\profile.js",["209"],"\r\nimport axios from 'axios';\r\nimport {setAlert} from './alert';\r\nimport {PROFILE_ERROR,GET_PROFILE,GET_PROFILES,UPDATE_PROFILE, DELETE_ACOUNT,CLEAR_PROFILE,GET_REPOS} from './types'\r\n\r\n//get profile function\r\n\r\nexport const getCurrentProfile = () =>  async dispatch =>{\r\n    //send request to back end for geting the profile user\r\n    \r\n    try {\r\n        const res = await axios.get('api/profile/me');\r\n        \r\n        dispatch({\r\n            type:GET_PROFILE,\r\n            payload:res.data\r\n        })\r\n    } catch (err) {\r\n        console.log(err.message);\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText,status: err.response.status}\r\n        })\r\n    }\r\n}\r\n//get profiles\r\n\r\nexport const getProfiles = () =>  async dispatch =>{\r\n//when they go to the profile list page i want to clear what ever in the current profile \r\n     \r\n    try {\r\n        const res = await axios.get('/api/profile');\r\n        \r\n        dispatch({\r\n            type:GET_PROFILES,\r\n            payload:res.data\r\n        })\r\n    } catch (err) {\r\n        console.log(err.message);\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText,status: err.response.status}\r\n        })\r\n    }\r\n}\r\n\r\n\r\n//get profile by id\r\n\r\nexport const getProfileById= userId =>  async dispatch =>{\r\n   \r\n        try {\r\n            const res = await axios.get(`/api/profile/user/${userId}`);\r\n           \r\n            dispatch({\r\n\r\n                type:GET_PROFILE,\r\n                payload:res.data\r\n            })\r\n            \r\n        } catch (err) {\r\n            \r\n            console.log(err.message);\r\n            dispatch({\r\n                type:PROFILE_ERROR,\r\n                payload: {msg: err.response.statusText,status: err.response.status}\r\n            })\r\n        }\r\n    }\r\n//get user github repos\r\n\r\nexport const getGithubRepos= username =>  async dispatch =>{\r\n     \r\n        try {\r\n            const res = await axios.get(`/api/profile/github/${username}`);\r\n            \r\n            dispatch({\r\n                type:GET_REPOS,\r\n                payload:res.data\r\n            })\r\n        } catch (err) {\r\n            console.log(err.message);\r\n            dispatch({\r\n                type:PROFILE_ERROR,\r\n                payload: {msg: err.response.statusText,status: err.response.status}\r\n            })\r\n        }\r\n    }\r\n    \r\n// create or update profile \r\nexport const createProfile=(formData,history,edit=false)=>  async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            }\r\n        }\r\nconst res = await axios.post('/api/profile',formData,config);\r\n\r\ndispatch({\r\n    type:GET_PROFILE,\r\n    payload:res.data\r\n});\r\ndispatch(setAlert(edit ? 'Votre profile a été modifié avec succès' : 'Votre profile a été créé  avec succès','success'));\r\n\r\nif(!edit){\r\n    history.push('/dashboard');\r\n}\r\n    } catch (err) {\r\n        const errors= err.response.data.errors;\r\n        if(errors){\r\n            errors.forEach(error => dispatch(setAlert(error.msg,'danger'))); \r\n        }\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText,status: err.response.status}\r\n        })\r\n    }\r\n}\r\n\r\n//add Experience action \r\n\r\nexport const addExperience =(formData,history)=> async dispatch=> {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            }\r\n        }\r\nconst res = await axios.put('/api/profile/experience',formData,config);\r\n\r\ndispatch({\r\n    type:UPDATE_PROFILE,\r\n    payload:res.data\r\n});\r\ndispatch(setAlert('Votre experience a été ajoutée avec succès','success'));\r\n\r\n\r\n    history.push('/dashboard');\r\n\r\n    } catch (err) {\r\n        const errors= err.response.data.errors;\r\n        if(errors){\r\n            errors.forEach(error => dispatch(setAlert(error.msg,'danger'))); \r\n        }\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText,status: err.response.status}\r\n        })\r\n    }\r\n\r\n\r\n}\r\n//add education action \r\nexport const addEducation =(formData,history)=> async dispatch=> {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            }\r\n        }\r\nconst res = await axios.put('/api/profile/education',formData,config);\r\n\r\ndispatch({\r\n    type:UPDATE_PROFILE,\r\n    payload:res.data\r\n});\r\ndispatch(setAlert('Votre education a été ajoutée avec succès','success'));\r\n\r\n\r\n    history.push('/dashboard');\r\n\r\n    } catch (err) {\r\n        const errors= err.response.data.errors;\r\n        if(errors){\r\n            errors.forEach(error => dispatch(setAlert(error.msg,'danger'))); \r\n        }\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText,status: err.response.status}\r\n        })\r\n    }\r\n\r\n\r\n}\r\n//delete experience \r\n\r\nexport const deleteExperience= id => async dispatch=> {\r\n    if(window.confirm('vous voulez vraiment supprimer cette experience ?'))\r\n   {\r\n        try {\r\n        const res= await axios.delete(`/api/profile/experience/${id}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload:res.data\r\n        })\r\n        dispatch(setAlert('Votre experience a été supprimer avec succès','success'));\r\n    } catch (err) {\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText,status: err.response.status}\r\n        })\r\n    }\r\n    \r\n\r\n}\r\n\r\n}\r\n\r\n\r\n//delete EDUCATION\r\n\r\nexport const deleteEducation= id=> async dispatch=>{\r\n    if(window.confirm('vous voulez vraiment supprimer cette education ??'))\r\n   {\r\n        try {\r\n        const res= await axios.delete(`/api/profile/education/${id}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload:res.data\r\n        })\r\n        dispatch(setAlert('Votre education a été supprimée avec succès','success'));\r\n    } catch (err) {\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText,status: err.response.status}\r\n        })\r\n    }\r\n    \r\n\r\n}\r\n\r\n}\r\n\r\n//delete acount\r\n\r\nexport const deleteAcount= ()=> async dispatch=>{\r\n    if(window.confirm('vous voulez vraiment supprimer votre compte'))\r\n   {\r\n        try {\r\n        const res= await axios.delete(`/api/profile`);\r\n\r\n        dispatch({\r\n            type: CLEAR_PROFILE,\r\n        })\r\n        dispatch({  type: DELETE_ACOUNT })\r\n\r\n        dispatch(setAlert('Votre compte a été supprimé'));\r\n    } catch (err) {\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText,status: err.response.status}\r\n        })\r\n    }\r\n    \r\n\r\n}\r\n\r\n}\r\n\r\n","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\reducers\\profile.js",["210"],"import {PROFILE_ERROR,GET_PROFILE,CLEAR_PROFILE,UPDATE_PROFILE, GET_PROFILES,GET_REPOS} from '../actions/types'\r\n\r\n\r\nconst initialeState= {\r\n    profile :null,\r\n    profiles : [],\r\n    loading : true,\r\n    repos:[],\r\n    error: {}\r\n\r\n}   \r\nexport default function (state=initialeState,action ) {\r\n  const {type,payload}=action;\r\n  switch (type) {\r\n      //get profile\r\n      case GET_PROFILE:\r\n      case UPDATE_PROFILE:\r\n          return {\r\n              ...state,\r\n              profile:payload,\r\n              loading :false\r\n              \r\n          }\r\n          case PROFILE_ERROR:\r\n            return {\r\n                ...state,\r\n                error : payload,\r\n                loading :false  \r\n            }\r\n            case CLEAR_PROFILE:\r\n          return {\r\n              ...state,\r\n              profile:null,\r\n              loading :false,\r\n              repos:[]\r\n              \r\n          }\r\n          case GET_PROFILES :\r\n              return {\r\n                  ...state,\r\n                  profiles: payload,\r\n                  loading:false\r\n              }\r\n\r\n          case GET_REPOS :\r\n              return {\r\n                  ...state,\r\n                  repos:payload,\r\n                  loading:false\r\n              }    \r\n  \r\n      default:\r\n          return state;\r\n  }\r\n}","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\layout\\Spinner.js",["211"],"import React,{Fragment} from 'react'\r\nimport spinner from './spinner.gif'\r\n\r\nexport default () =>(\r\n<Fragment>\r\n    \r\n<img src={spinner}\r\nstyle={{ width : '200px' , margin:'auto', display : 'block'}}\r\nalt=\"loading...\"\r\n\r\n/>\r\n\r\n\r\n\r\n</Fragment>\r\n);\r\n","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\profile-forms\\CreateProfile.js",[],"C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\dashboard\\DashbordAction.js",[],"C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\profile-forms\\EditProfile.js",["212","213"],"import React, {Fragment, useState,useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\nimport {createProfile,getCurrentProfile} from '../../actions/profile'\r\nimport {Link,withRouter} from 'react-router-dom'\r\nimport profile from '../../reducers/profile'\r\n\r\n\r\n\r\n\r\nconst EditProfile = ({profile:{profile,loading},createProfile,getCurrentProfile,history}) => {\r\n\r\n    const [formData,setFormData ]= useState({\r\n        company: '',\r\n        website: '',\r\n        location: '',\r\n        status: '',\r\n        skills: '',\r\n        githubusername: '',\r\n        bio: '',\r\n        twitter: '',\r\n        facebook: '',\r\n        linkedin: '',\r\n        youtube: '',\r\n        instagram: ''\r\n\r\n    });\r\n    const [displaySocialInputs, toggleSocialInputs] =useState(false);\r\n      //use effect \r\n     useEffect(() => {\r\n         getCurrentProfile();\r\n        setFormData({\r\n            company: loading || !profile.company ? '' : profile.company,\r\n            website: loading || !profile.website ? '' : profile.website,\r\n            location: loading || !profile.location ? '' : profile.location,\r\n            status: loading || !profile.status ? '' : profile.status,\r\n            skills: loading || !profile.skills ? '' : profile.skills.join(','),\r\n            githubusername: loading || !profile.githubusername ? '' : profile.githubusername,\r\n            bio: loading || !profile.bio ? '' : profile.bio,\r\n            twitter: loading || !profile.social ? '' : profile.social.twitter,\r\n            facebook: loading || !profile.social ? '' : profile.social.facebook,\r\n            instagram: loading || !profile.social ? '' : profile.social.instagram,\r\n            youtube: loading || !profile.social ? '' : profile.social.youtube,\r\n            linkedin: loading || !profile.social ? '' : profile.social.linkedin\r\n        })\r\n     }, [loading])\r\n\r\n\r\n\r\n    const {\r\n        company,\r\n        website,\r\n        location,\r\n        status,\r\n        skills,\r\n        githubusername,\r\n        bio,\r\n        twitter,\r\n        facebook,\r\n        linkedin,\r\n        youtube,\r\n        instagram\r\n\r\n    } = formData;\r\n\r\n    const onchange=e=> setFormData({...formData,[e.target.name]:e.target.value});\r\n// submit data form to the backend\r\n       const onSubmit = e => {\r\n        e.preventDefault();   \r\n        createProfile(formData, history,true);\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"large text-primary\">\r\n        Créer Votre Profile\r\n      </h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\"></i> Obtenons quelques informations pour que votre profil se démarque\r\n      </p>\r\n      <small>* = champ requis</small>\r\n      <form className=\"form\" onSubmit={e=>onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <select name=\"status\" value={status} onChange={e=>onchange(e)}>\r\n            <option value=\"0\">* Sélectionnez votre Statut professionnel</option>\r\n            <option value=\"Developer\">Developpeur</option>\r\n            <option value=\"Junior Developer\">Développeur Junior</option>\r\n            <option value=\"Senior Developer\"> Developpeur Senior</option>\r\n            <option value=\"Manager\">Manager</option>\r\n            <option value=\"Student or Learning\">Étudiant ou apprenant</option>\r\n            <option value=\"Instructor\">Instructeur ou enseignant</option>\r\n            <option value=\"Intern\">Intern</option>\r\n            <option value=\"Other\">Other</option>\r\n          </select>\r\n          <small className=\"form-text\"\r\n            >Donnez-nous une idée de l’endroit où vous en êtes dans votre carrière</small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Entreprise\" name=\"company\" value={company} onChange={e=>onchange(e)}  />\r\n          <small className=\"form-text\"\r\n            >Peut-être votre propre entreprise ou celle pour qui vous travaillez</small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Site Web\" name=\"website\" value={website} onChange={e=>onchange(e)} />\r\n          <small className=\"form-text\"\r\n            >Peut-être votre propre site Web ou un site Web de l’entreprise</small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e=>onchange(e)}/>\r\n          <small className=\"form-text\"> City & state suggested </small >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* Compétences\" name=\"skills\"  value={skills} onChange={e=>onchange(e)}/>\r\n          <small className=\"form-text\"\r\n            >S’il vous plaît utiliser des valeurs séparées virgule (par exemple. HTML,CSS,JavaScript,PHP)</small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Nom d’utilisateur Github\" \r\n            name=\"githubusername\"\r\n            value={githubusername} onChange={e=>onchange(e)}\r\n          />\r\n          <small className=\"form-text\"\r\n            >Si vous souhaitez votre dernier repos et un lien Github, incluez votre nom d’utilisateur</small >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea placeholder=\"Une courte biographie de vous-même\" name=\"bio\" value={bio} onChange={e=>onchange(e)}></textarea>\r\n          <small className=\"form-text\">Parlez-nous un peu de vous</small>\r\n        </div>\r\n\r\n        <div className=\"my-2\">\r\n          <button type=\"button\" onClick={()=>toggleSocialInputs(!displaySocialInputs)} className=\"btn btn-light\">\r\n          Ajouter des liens réseau social\r\n          </button>\r\n          <span>Optionnel</span>\r\n        </div>\r\n         {displaySocialInputs &&\r\n          ( <Fragment>\r\n            <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-twitter fa-2x\"></i>\r\n          <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={e=>onchange(e)}/>\r\n        </div>\r\n\r\n        <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-facebook fa-2x\"></i>\r\n          <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={e=>onchange(e)} />\r\n        </div>\r\n\r\n        <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-youtube fa-2x\"></i>\r\n          <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={e=>onchange(e)} />\r\n        </div>\r\n\r\n        <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-linkedin fa-2x\"></i>\r\n          <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={e=>onchange(e)}  />\r\n        </div>\r\n\r\n        <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-instagram fa-2x\"></i>\r\n          <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\"  value={instagram} onChange={e=>onchange(e)}/>\r\n        </div> \r\n             \r\n              </Fragment>\r\n              \r\n           )}\r\n      \r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Retour</Link>\r\n      </form>\r\n        </Fragment>\r\n    )\r\n}\r\nEditProfile.propTypes = {\r\ncreateProfile :PropTypes.func.isRequired,\r\nprofile : PropTypes.object.isRequired,\r\ngetCurrentProfile:PropTypes.func.isRequired,\r\n}\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps,{createProfile,getCurrentProfile})(withRouter(EditProfile));\r\n","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\profile-forms\\AddExperience.js",["214","215"],"import React,{Fragment,useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link,withRouter} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {addExperience} from '../../actions/profile'\r\n\r\nconst AddExperience = ({addExperience,history}) => {\r\nconst [formData,setFormData] =useState({\r\n\r\n    company:'',\r\n    title:'',\r\n    location:'',\r\n    from:'',\r\n    current:false,\r\n    to:'',\r\n    description:''\r\n})\r\n\r\nconst {\r\n    company,\r\n    title,\r\n    location,\r\n    from,\r\n    current,\r\n    to,\r\n    description\r\n}=formData;\r\n//check if the current checkbox is checked \r\n\r\nconst [toDateDisabled,toggleDisabled]=useState(false);\r\n\r\nconst onChange =e => setFormData({...formData,[e.target.name]:e.target.value});\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"large text-primary\">\r\n       Ajouter une experience\r\n      </h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-code-branch\"></i>   Ajouter n’importe quel développeur/programmation\r\n        positions que vous avez eues dans le passé\r\n      </p>\r\n      <small>* = Champs requis </small>\r\n      <form className=\"form\" onSubmit={e=>{\r\n          e.preventDefault();\r\n          addExperience(formData,history);\r\n      }}>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* Titre de l’emploi\" name=\"title\" value={title} onChange={e=>onChange(e)} required />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* Entreprise\" name=\"company\" value={company} onChange={e=>onChange(e)}  required />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e=>onChange(e)} />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>De la date </h4>\r\n          <input type=\"date\" name=\"from\" value={from} onChange={e=>onChange(e)}/>\r\n        </div>\r\n         <div className=\"form-group\">\r\n          <p><input type=\"checkbox\" name=\"Actuelle\" checked={current} value={current} onChange={e=>{\r\n                setFormData({...formData,current:!current});\r\n                toggleDisabled(!toDateDisabled)\r\n\r\n          }} /> Emploi actuel</p>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>Jusqu'à la date </h4>\r\n          <input type=\"date\" name=\"to\" value={to} onChange={e=>onChange(e)} disabled={\r\n              toDateDisabled ? 'disabled': ''\r\n          } />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            name=\"description\"\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n            placeholder=\" Description de votre emploi \"\r\n            value={description} onChange={e=>onChange(e)}\r\n          ></textarea>\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <a className=\"btn btn-light my-1\" href=\"dashboard.html\">Retour</a>\r\n      </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nAddExperience.propTypes = {\r\naddExperience:PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(null,{addExperience})(AddExperience)\r\n","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\profile-forms\\AddEducation.js",["216","217","218"],"import React,{Fragment,useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link,Redirect,withRouter} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {addEducation} from '../../actions/profile'\r\n\r\nconst AddEducation = ({addEducation,history}) => {\r\nconst [formData,setFormData] =useState({\r\n\r\n    school:'',\r\n    degree:'',\r\n    fieldofstudy:'',\r\n    from:'',\r\n    current:false,\r\n    to:'',\r\n    description:''\r\n})\r\n\r\nconst {\r\n    school,\r\n    degree,\r\n    fieldofstudy,\r\n    from,\r\n    current,\r\n    to,\r\n    description\r\n}=formData;\r\n//check if the current checkbox is checked \r\n\r\nconst [toDateDisabled,toggleDisabled]=useState(false);\r\n\r\nconst onChange =e => setFormData({...formData,[e.target.name]:e.target.value});\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"large text-primary\" >\r\n       Ajouter une Education\r\n      </h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-code-branch\"></i> Ajouter n’importe quelle école, que vous avez assisté\r\n      </p>\r\n      <small>* = Champs requis </small>\r\n\r\n      <form className=\"form\" onSubmit={ e=>{\r\n          e.preventDefault();\r\n          addEducation(formData,history)}}>\r\n\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* Ecole \" name=\"school\" value={school} \r\n          onChange={e=>onChange(e)} required />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"*  Diplôme ou certificat\" name=\"degree\" value={degree} \r\n          onChange={e=>onChange(e)}  required />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Domaine d'étude \" name=\"fieldofstudy\" value={fieldofstudy} \r\n          onChange={e=>onChange(e)} />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>De la date</h4>\r\n          <input type=\"date\" name=\"from\" value={from}\r\n           onChange={e=>onChange(e)}/>\r\n        </div>\r\n         <div className=\"form-group\">\r\n          <p><input type=\"checkbox\" name=\"current\" checked={current} value={current}\r\n           onChange={e=>{\r\n                setFormData({...formData,current:!current});\r\n                toggleDisabled(!toDateDisabled)\r\n\r\n          }} /> Ecole actuelle </p>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>jusqu'à la date</h4>\r\n          <input type=\"date\" name=\"to\" value={to} onChange={e=>onChange(e)} disabled={\r\n              toDateDisabled ? 'disabled': ''\r\n          } />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            name=\"description\"\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n            placeholder=\" Description de programme\"\r\n            value={description} onChange={e=>onChange(e)}\r\n          ></textarea>\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <a className=\"btn btn-light my-1\" href=\"dashboard.html\">Retour</a>\r\n      </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nAddEducation.propTypes = {\r\naddEducation:PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(null,{addEducation})(AddEducation)\r\n","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\dashboard\\Education.js",[],"C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\dashboard\\Experience.js",[],"C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\profiles\\Profiles.js",["219"],"import React,{Fragment,useEffect} from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {getProfiles} from '../../actions/profile'\r\nimport Spinner from '../layout/Spinner'\r\nimport ProfileItem from './ProfileItem'\r\n\r\nconst Profiles = ({profile:{profiles,loading},getProfiles}) => {\r\nuseEffect(() => {\r\n   getProfiles();\r\n}, [])\r\n\r\n    return (\r\n        <Fragment>\r\n            {loading ? <Spinner></Spinner> : <Fragment>\r\n                <h1 className=\"large text-primary\">Developpeurs</h1>\r\n                <p className=\"lead\">\r\n                    <i className=\"fab fa-connectdevelop\"></i> {' '}\r\n                    parcourir et se connecter avec les développeurs\r\n                </p>\r\n                <div className=\"profiles\">\r\n                {profiles.length >0 ? (\r\n                    profiles.map(profile => (<ProfileItem key={profile._id}\r\n                         profile={profile}/>))\r\n                ) \r\n                : <h4> Aucun profil trouvé</h4> }\r\n                </div>\r\n                </Fragment>}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nProfiles.propTypes = {\r\ngetProfiles:PropTypes.func.isRequired,\r\nprofile:PropTypes.object.isRequired,\r\n}\r\nconst mapStateToProps= state =>({\r\nprofile:state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps,{getProfiles})(Profiles)\r\n","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\profiles\\ProfileItem.js",[],"C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\profile\\Profile.js",["220"],"import React,{Fragment,useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link } from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport Spinner from '../../components/layout/Spinner'\r\nimport ProfileAbout from './ProfileAbout'\r\nimport ProfileTop from './ProfileTop'\r\nimport ProfileExperiences from './ProfileExperiences'\r\nimport ProfileEducation from './ProfileEducation'\r\nimport ProfileGithub from './ProfileGithub'\r\n\r\nimport {getProfileById} from '../../actions/profile'\r\nimport { profile_url } from 'gravatar'\r\n\r\n\r\nconst Profile = ({getProfileById,profile:{profile,loading},auth,match}) => {\r\n\r\nuseEffect(() => {\r\n\r\n    getProfileById(match.params.id) //will toggle a get profile action\r\n   \r\n   \r\n\r\n}, [getProfileById,match.params.id])\r\n\r\n    return (\r\n\r\n        <Fragment>\r\n          {profile === null || loading ? (<Spinner></Spinner>) :\r\n           (<Fragment>\r\n\r\n              <Link to=\"/profiles\" className=\"btn btn-dark my-2\" >Retour </Link>\r\n              { auth.isAuthenticated && !auth.loading && auth.user._id === profile.user._id  && (<Link to=\"/edit-profile\" \r\n              className=\"btn btn-primary my-2\"> Modifier Profile</Link>)}\r\n                <div className=\"profile-grid my-1\">\r\n                  <ProfileTop profile={profile}></ProfileTop>\r\n                  <ProfileAbout profile={profile}></ProfileAbout>\r\n                    \r\n                    <div className=\"profile-exp bg-dark p-2\">\r\n                      <h2 className=\"text-primary\">\r\n                        Experiences \r\n                      </h2>\r\n                      {profile.experience.length > 0 ? (<Fragment>\r\n\r\n                        { profile.experience.map(experience=>(\r\n                          <ProfileExperiences key={experience._id} experience={experience}/>\r\n                        ))}\r\n                      </Fragment>) : (<h4> Pas d'experiences</h4>) }\r\n\r\n                    </div>\r\n                    <div className=\"profile-edu bg-dark p-2\">\r\n                      <h2 className=\"text-primary\">\r\n                        Educations  \r\n                      </h2>\r\n                      {profile.education.length > 0 ? (<Fragment>\r\n\r\n                        { profile.education.map(education=>(\r\n                          <ProfileEducation key={education._id} education={education}/>\r\n                        ))}\r\n                      </Fragment>) : (<h4> Pas d'educations</h4>) }\r\n\r\n                    </div>\r\n                     {profile.githubusername && (\r\n                       <ProfileGithub username={profile.githubusername}></ProfileGithub>\r\n                     )}\r\n                 </div>\r\n              </Fragment>\r\n             ) }  \r\n           \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nProfile.propTypes = {\r\ngetProfileById:PropTypes.func.isRequired,\r\nauth:PropTypes.object.isRequired,\r\nprofile:PropTypes.object.isRequired,\r\n}\r\nconst mapStateToProps=state=>({\r\n    auth: state.auth,\r\n    profile: state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps,{getProfileById})(Profile)\r\n","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\profile\\ProfileAbout.js",[],"C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\profile\\ProfileTop.js",[],"C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\profile\\ProfileExperiences.js",[],"C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\profile\\ProfileEducation.js",[],"C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\profile\\ProfileGithub.js",["221"],"import React,{useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\nimport {getGithubRepos} from '../../actions/profile'\r\nimport Spinner from '../layout/Spinner'\r\nconst ProfileGithub = ({username,getGithubRepos,repos}) => {\r\n\r\n    useEffect(()=>{\r\n     getGithubRepos(username)\r\n    },[getGithubRepos])\r\n\r\n    return (\r\n        <div className=\"profile-github \">\r\n           \r\n           <h2 className=\"text-primary my-1\"> GitHub Repository</h2> \r\n           {repos=== null ? (<Spinner></Spinner>): (\r\n               repos.map(repo=>(\r\n                   <div key={repo._id} className=\"repo bg-light p-1 my-1\">\r\n\r\n                       <div>\r\n                           <h4>\r\n                               <a href={repo.html_url} target=\"_blank\" \r\n                               \r\n                               rel=\"noopener noreferrer\">\r\n                                   {repo.name}\r\n                               </a>\r\n                           </h4>\r\n                           <p>\r\n                               {repo.description}\r\n\r\n                           </p>\r\n                       </div>\r\n                       <div>\r\n                           <ul>\r\n                               <li className=\"badge badge-primary\">\r\n                                   Starts: {repo.stargazers_count}\r\n                               </li>\r\n                               <li className=\"badge badge-dark\">\r\n                                   Watchers: {repo.watchers_count}\r\n                               </li>\r\n                               <li className=\"badge badge-light\">\r\n                                    Forks: {repo.forks_count}\r\n                               </li>\r\n                           </ul>\r\n                       </div>\r\n                   </div>\r\n               ))\r\n           )}\r\n        </div>\r\n    )\r\n}\r\n\r\nProfileGithub.propTypes = {\r\n getGithubRepos:PropTypes.func.isRequired,\r\n repos:PropTypes.array.isRequired,\r\n username:PropTypes.string.isRequired,\r\n}\r\nconst mapStateToProps = state=>( {\r\n    repos:state.profile.repos\r\n})\r\n\r\nexport default connect(mapStateToProps,{getGithubRepos}) (ProfileGithub)\r\n","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\reducers\\post.js",["222","223"],"C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\posts\\posts.js",["224","225","226"],"C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\actions\\post.js",["227"],"C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\posts\\Posts.js",[],"C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\posts\\PostItem.js",["228"],"import React, { Fragment, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Moment from \"react-moment\";\r\nimport { addLike, removeLike, deletePost } from \"../../actions/post\";\r\n\r\n\r\nconst PostItem = ({\r\n  post: {_id, text, name, avatar, user, likes, comments, date },\r\n  auth,\r\n  addLike,\r\n  removeLike,\r\n  deletePost,\r\n  showActions\r\n}) => {\r\n  return (\r\n    <div className=\"post bg-white p-1 my-1\">\r\n      <div>\r\n        <Link to={`/profile/${user}`}>\r\n          <img className=\"round-img\" src={avatar} alt=\"\" />\r\n          <h4>{name}</h4>\r\n        </Link>\r\n      </div>\r\n      <div>\r\n        <p className=\"my-1\">{text}</p>\r\n        <p className=\"post-date\">\r\n          Posted on (<Moment format=\"YYYY/MM/DD\">{date}</Moment>)\r\n        </p>\r\n\r\n         {showActions && (<Fragment>\r\n           \r\n          <button\r\n          onClick={(e) => addLike(_id)}\r\n          type=\"button\"\r\n          className=\"btn btn-light\"\r\n        >\r\n          <i className=\"fas fa-thumbs-up\"></i>\r\n          <span> {likes.length > 0 && <span>{likes.length}</span>} </span>\r\n        </button>\r\n        <button\r\n          onClick={(e) => removeLike(_id)}\r\n          type=\"button\"\r\n          className=\"btn btn-light\"\r\n        >\r\n          <i className=\"fas fa-thumbs-down\"></i>\r\n        </button>\r\n        <Link to={`/posts/${_id}`} className=\"btn btn-primary\">\r\n          Discussion{\" \"}\r\n          {comments.length > 0 && (\r\n            <span className=\"comment-count\">{comments.length}</span>\r\n          )}\r\n        </Link>\r\n        {!auth.loading && user === auth.user._id && (\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-danger\"\r\n            onClick={(e) => deletePost(_id)}\r\n          >\r\n            <i className=\"fas fa-times\"></i>\r\n          </button>\r\n        )}\r\n\r\n         </Fragment>)}\r\n      \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nPostItem.defaultProps={\r\n  showActions:true\r\n}\r\n\r\n\r\n\r\nPostItem.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  addLike: PropTypes.func.isRequired,\r\n  removeLike: PropTypes.func.isRequired,\r\n  deletePost: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(\r\n  PostItem\r\n);\r\n","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\posts\\PostForm.js",[],"C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\post\\Post.js",["229"],"import React, { Fragment, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getPost } from \"../../actions/post\";\r\nimport {Link} from 'react-router-dom'\r\nimport PostItem from '../posts/PostItem'\r\nimport Spinner from \"../layout/Spinner\";\r\nimport CommentForm from './CommentForm'\r\nimport CommentItem from './CommentItem'\r\n\r\nconst Post = ({ getPost, post: { loading, post }, match }) => {\r\nuseEffect(()=>{\r\n  getPost(match.params.id)\r\n},[getPost])\r\n\r\n  return loading || post===null?(<Spinner></Spinner>) :( <Fragment>\r\n      <Link to=\"/posts\" className=\"btn btn-dark\">Retour</Link>\r\n      <PostItem  post={post} showActions={false}></PostItem>\r\n      <CommentForm postId={post._id}></CommentForm>\r\n      <div className=\"comments\">\r\n\r\n      {post.comments.map(comment=>(<CommentItem  key={comment._id} comment={comment} postId={post._id}></CommentItem>))}\r\n\r\n      </div>\r\n    \r\n      </Fragment>)\r\n\r\n\r\n};\r\n\r\nPost.propTypes = {\r\n  getPost: PropTypes.func.isRequired,\r\n  post:PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  post: state.post,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPost })(Post);\r\n","C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\post\\CommentForm.js",[],"C:\\Users\\rbagh\\rachid chambre 31\\react-p\\mernProject\\client\\src\\components\\post\\CommentItem.js",[],{"ruleId":"230","replacedBy":"231"},{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","severity":1,"message":"235","line":3,"column":9,"nodeType":"236","messageId":"237","endLine":3,"endColumn":17},{"ruleId":"234","severity":1,"message":"238","line":2,"column":9,"nodeType":"236","messageId":"237","endLine":2,"endColumn":17},{"ruleId":"234","severity":1,"message":"239","line":8,"column":8,"nodeType":"236","messageId":"237","endLine":8,"endColumn":17},{"ruleId":"234","severity":1,"message":"238","line":2,"column":9,"nodeType":"236","messageId":"237","endLine":2,"endColumn":17},{"ruleId":"234","severity":1,"message":"240","line":3,"column":8,"nodeType":"236","messageId":"237","endLine":3,"endColumn":13},{"ruleId":"234","severity":1,"message":"241","line":8,"column":9,"nodeType":"236","messageId":"237","endLine":8,"endColumn":17},{"ruleId":"234","severity":1,"message":"242","line":9,"column":8,"nodeType":"236","messageId":"237","endLine":9,"endColumn":12},{"ruleId":"243","severity":1,"message":"244","line":4,"column":1,"nodeType":"245","endLine":19,"endColumn":2},{"ruleId":"243","severity":1,"message":"244","line":18,"column":1,"nodeType":"245","endLine":57,"endColumn":2},{"ruleId":"234","severity":1,"message":"246","line":1,"column":25,"nodeType":"236","messageId":"237","endLine":1,"endColumn":34},{"ruleId":"247","severity":1,"message":"248","line":14,"column":8,"nodeType":"249","endLine":14,"endColumn":10,"suggestions":"250"},{"ruleId":"234","severity":1,"message":"251","line":243,"column":15,"nodeType":"236","messageId":"237","endLine":243,"endColumn":18},{"ruleId":"243","severity":1,"message":"244","line":12,"column":1,"nodeType":"245","endLine":55,"endColumn":2},{"ruleId":"243","severity":1,"message":"252","line":4,"column":1,"nodeType":"245","endLine":16,"endColumn":3},{"ruleId":"234","severity":1,"message":"253","line":6,"column":8,"nodeType":"236","messageId":"237","endLine":6,"endColumn":15},{"ruleId":"247","severity":1,"message":"254","line":46,"column":9,"nodeType":"249","endLine":46,"endColumn":18,"suggestions":"255"},{"ruleId":"234","severity":1,"message":"256","line":3,"column":9,"nodeType":"236","messageId":"237","endLine":3,"endColumn":13},{"ruleId":"234","severity":1,"message":"257","line":3,"column":14,"nodeType":"236","messageId":"237","endLine":3,"endColumn":24},{"ruleId":"234","severity":1,"message":"256","line":3,"column":9,"nodeType":"236","messageId":"237","endLine":3,"endColumn":13},{"ruleId":"234","severity":1,"message":"258","line":3,"column":14,"nodeType":"236","messageId":"237","endLine":3,"endColumn":22},{"ruleId":"234","severity":1,"message":"257","line":3,"column":23,"nodeType":"236","messageId":"237","endLine":3,"endColumn":33},{"ruleId":"247","severity":1,"message":"259","line":11,"column":4,"nodeType":"249","endLine":11,"endColumn":6,"suggestions":"260"},{"ruleId":"234","severity":1,"message":"261","line":13,"column":10,"nodeType":"236","messageId":"237","endLine":13,"endColumn":21},{"ruleId":"247","severity":1,"message":"262","line":10,"column":7,"nodeType":"249","endLine":10,"endColumn":23,"suggestions":"263"},{"ruleId":"234","severity":1,"message":"264","line":1,"column":10,"nodeType":"236","messageId":"237","endLine":1,"endColumn":14},{"ruleId":"243","severity":1,"message":"244","line":19,"column":1,"nodeType":"245","endLine":79,"endColumn":2},{"ruleId":"234","severity":1,"message":"235","line":1,"column":16,"nodeType":"236","messageId":"237","endLine":1,"endColumn":24},{"ruleId":"234","severity":1,"message":"265","line":4,"column":8,"nodeType":"236","messageId":"237","endLine":4,"endColumn":15},{"ruleId":"266","severity":2,"message":"267","line":7,"column":5,"nodeType":"236","endLine":7,"endColumn":14},{"ruleId":"234","severity":1,"message":"268","line":1,"column":8,"nodeType":"236","messageId":"237","endLine":1,"endColumn":13},{"ruleId":"234","severity":1,"message":"246","line":1,"column":27,"nodeType":"236","messageId":"237","endLine":1,"endColumn":36},{"ruleId":"247","severity":1,"message":"269","line":14,"column":3,"nodeType":"249","endLine":14,"endColumn":12,"suggestions":"270"},"no-native-reassign",["271"],"no-negated-in-lhs",["272"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'fragment' is defined but never used.","'validator' is defined but never used.","'axios' is defined but never used.","'setAlert' is defined but never used.","'auth' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'getCurrentProfile'. Either include it or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["273"],"'res' is assigned a value but never used.","Assign arrow function to a variable before exporting as module default","'profile' is defined but never used.","React Hook useEffect has missing dependencies: 'getCurrentProfile', 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["274"],"'Link' is defined but never used.","'withRouter' is defined but never used.","'Redirect' is defined but never used.","React Hook useEffect has a missing dependency: 'getProfiles'. Either include it or remove the dependency array. If 'getProfiles' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["275"],"'profile_url' is defined but never used.","React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["276"],"'post' is defined but never used.","'Spinner' is defined but never used.","react-hooks/rules-of-hooks","React Hook \"useEffect\" is called in function \"posts\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","'React' is defined but never used.","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["277"],"no-global-assign","no-unsafe-negation",{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},"Update the dependencies array to be: [getCurrentProfile]",{"range":"288","text":"289"},"Update the dependencies array to be: [getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]",{"range":"290","text":"291"},"Update the dependencies array to be: [getProfiles]",{"range":"292","text":"293"},"Update the dependencies array to be: [getGithubRepos, username]",{"range":"294","text":"295"},"Update the dependencies array to be: [getPost, match.params.id]",{"range":"296","text":"297"},[590,592],"[getCurrentProfile]",[1863,1872],"[getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]",[365,367],"[getProfiles]",[329,345],"[getGithubRepos, username]",[496,505],"[getPost, match.params.id]"]